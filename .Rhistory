SNAPCHAT_WIFI_GB = pilot_orange.1.player.wifi_facebook/SNAPCHAT_UM_WIFI,
TIKTOK_WIFI_GB = pilot_orange.1.player.wifi_facebook/TIKTOK_UM_WIFI,
YOUTUBE_WIFI_GB = pilot_orange.1.player.wifi_facebook/YOUTUBE_UM_WIFI,
FACEBOOK_MOBILE_GB = pilot_orange.1.player.wifi_facebook/FACEBOOK_UM_MOBILE,
INSTAGRAM_MOBILE_GB = pilot_orange.1.player.wifi_facebook/INSTAGRAM_UM_MOBILE,
SNAPCHAT_MOBILE_GB = pilot_orange.1.player.wifi_facebook/SNAPCHAT_UM_MOBILE,
TIKTOK_MOBILE_GB = pilot_orange.1.player.wifi_facebook/TIKTOK_UM_MOBILE,
YOUTUBE_MOBILE_GB = pilot_orange.1.player.wifi_facebook/YOUTUBE_UM_MOBILE,
)
master_df <- master_df %>% filter(location="MONTPELLIER")
master_df <- master_df %>% filter(location=="MONTPELLIER")
set.seed(10)
library(dplyr)
gagnants <- sample(master_df$participant.label, 5)
perdents <- master_df %>% filter(!(participant.label %in%gagnants)) %>% subset.data.frame(select = participant.label)
j="INSERT INTO `or_participate_at` (`participant_id`, `experiment_id`) VALUES "
for (i in gagnants) {
j=paste(j,
paste("(",i,",",sep=""),paste(1663948857,"),",sep=""), sep = "")
}
write(j, file="MONTEPLLIER_gagnants.txt")
master_df %>% filter(participant.label %in% gagnants) %>% subset.data.frame(select = c(participant.label, WIFI_GB, WIFI_GB_OLD, MOBILE_GB, MOBILE_GB_OLD))
getwd()
master_df %>% filter(participant.label %in% gagnants) %>% subset.data.frame(select = c(participant.label, WIFI_GB, WIFI_GB_OLD, MOBILE_GB, MOBILE_GB_OLD))
library(readr)
library(summarytools)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggpubr)
rm(list=ls())
DIJON_room_1_21_09 <- read_csv("C:/Users/aguido/Dropbox/Werk - Projects/Orange - Nudges/Study proposal/02_Design_proposal/002_Pilot/Data/DIJON_room_1_21_09.csv") %>% mutate(location="DIJON")
DIJON_room_2_21_09 <- read_csv("C:/Users/aguido/Dropbox/Werk - Projects/Orange - Nudges/Study proposal/02_Design_proposal/002_Pilot/Data/DIJON_room_2_21_09.csv") %>% mutate(location="DIJON")
MONTPEL <- read_csv("C:/Users/aguido/Dropbox/Werk - Projects/Orange - Nudges/Study proposal/02_Design_proposal/002_Pilot/Data/MONTPEL_2022-09-26 - Copie.csv") %>% filter(!is.na(participant.label)) %>% mutate(location="MONTPELLIER",
session.config.name=NA,
session.config.participation_fee=NA,
session.config.real_world_currency_per_point=NA)
# unique dataset -------------
master_df <- DIJON_room_1_21_09 %>% rbind.data.frame(DIJON_room_2_21_09) %>% rbind.data.frame(MONTPEL) %>%
filter(pilot_orange.1.player.dropped == 0 & participant._index_in_pages==13) %>%
mutate(UM_WIFI = recode(pilot_orange.1.player.wifi_UM, Mb = 1000, Kb = 100000, Gb = 1),
UM_WIFI_OLD = recode(pilot_orange.1.player.wifi_UM_old, Mb = 1000, Kb = 100000, Gb = 1),
UM_MOBILE = recode(pilot_orange.1.player.mobile_UM, Mb = 1000, Kb = 100000, Gb = 1),
UM_MOBILE_OLD = recode(pilot_orange.1.player.mobile_UM_old, Mb = 1000, Kb = 100000, Gb = 1),
FACEBOOK_UM_WIFI = recode(pilot_orange.1.player.wifi_UM_facebook, Mb = 1000, Kb = 100000, Gb = 1),
YOUTUBE_UM_WIFI = recode(pilot_orange.1.player.wifi_UM_youtube, Mb = 1000, Kb = 100000, Gb = 1),
TIKTOK_UM_WIFI = recode(pilot_orange.1.player.wifi_UM_tiktok, Mb = 1000, Kb = 100000, Gb = 1),
SNAPCHAT_UM_WIFI = recode(pilot_orange.1.player.wifi_UM_snapchat, Mb = 1000, Kb = 100000, Gb = 1),
INSTAGRAM_UM_WIFI = recode(pilot_orange.1.player.wifi_UM_instagram, Mb = 1000, Kb = 100000, Gb = 1),
FACEBOOK_UM_MOBILE = recode(pilot_orange.1.player.mobile_UM_facebook, Mb = 1000, Kb = 100000, Gb = 1),
YOUTUBE_UM_MOBILE = recode(pilot_orange.1.player.mobile_UM_youtube, Mb = 1000, Kb = 100000, Gb = 1),
TIKTOK_UM_MOBILE = recode(pilot_orange.1.player.mobile_UM_tiktok, Mb = 1000, Kb = 100000, Gb = 1),
SNAPCHAT_UM_MOBILE = recode(pilot_orange.1.player.mobile_UM_snapchat, Mb = 1000, Kb = 100000, Gb = 1),
INSTAGRAM_UM_MOBILE = recode(pilot_orange.1.player.mobile_UM_instagram, Mb = 1000, Kb = 100000, Gb = 1)
)%>%
mutate(WIFI_GB = pilot_orange.1.player.wifi_consumption/UM_WIFI,
WIFI_GB_OLD = pilot_orange.1.player.wifi_consumption_old/UM_WIFI_OLD,
MOBILE_GB = pilot_orange.1.player.mobile_consumption/UM_MOBILE,
MOBILE_GB_OLD = pilot_orange.1.player.mobile_consumption_old/UM_MOBILE_OLD,
FACEBOOK_WIFI_GB = pilot_orange.1.player.wifi_facebook/FACEBOOK_UM_WIFI,
INSTAGRAM_WIFI_GB = pilot_orange.1.player.wifi_facebook/INSTAGRAM_UM_WIFI,
SNAPCHAT_WIFI_GB = pilot_orange.1.player.wifi_facebook/SNAPCHAT_UM_WIFI,
TIKTOK_WIFI_GB = pilot_orange.1.player.wifi_facebook/TIKTOK_UM_WIFI,
YOUTUBE_WIFI_GB = pilot_orange.1.player.wifi_facebook/YOUTUBE_UM_WIFI,
FACEBOOK_MOBILE_GB = pilot_orange.1.player.wifi_facebook/FACEBOOK_UM_MOBILE,
INSTAGRAM_MOBILE_GB = pilot_orange.1.player.wifi_facebook/INSTAGRAM_UM_MOBILE,
SNAPCHAT_MOBILE_GB = pilot_orange.1.player.wifi_facebook/SNAPCHAT_UM_MOBILE,
TIKTOK_MOBILE_GB = pilot_orange.1.player.wifi_facebook/TIKTOK_UM_MOBILE,
YOUTUBE_MOBILE_GB = pilot_orange.1.player.wifi_facebook/YOUTUBE_UM_MOBILE,
)
MONTPEL <- read_csv("C:/Users/aguido/Dropbox/Werk - Projects/Orange - Nudges/Study proposal/02_Design_proposal/002_Pilot/Data/MONTPEL_2022-09-30.csv") %>% filter(!is.na(participant.label)) %>% mutate(location="MONTPELLIER",
session.config.name=NA,
session.config.participation_fee=NA,
session.config.real_world_currency_per_point=NA)
MONTPEL
MONTPEL <- read_csv("C:/Users/aguido/Dropbox/Werk - Projects/Orange - Nudges/Study proposal/02_Design_proposal/002_Pilot/Data/MONTPEL_2022-09-30.csv") %>% filter(!is.na(participant.label)) %>% mutate(location="MONTPELLIER",
session.config.name=NA,
session.config.participation_fee=NA,
session.config.real_world_currency_per_point=NA)
MONTPEL <- read_csv("C:/Users/aguido/Dropbox/Werk - Projects/Orange - Nudges/Study proposal/02_Design_proposal/002_Pilot/Data/MONTPEL_2022-09-30.csv", delim=";") %>% filter(!is.na(participant.label)) %>% mutate(location="MONTPELLIER",
session.config.name=NA,
session.config.participation_fee=NA,
session.config.real_world_currency_per_point=NA)
MONTPEL <- read_csv("C:/Users/aguido/Dropbox/Werk - Projects/Orange - Nudges/Study proposal/02_Design_proposal/002_Pilot/Data/MONTPEL_2022-09-30.csv", sep=";") %>% filter(!is.na(participant.label)) %>% mutate(location="MONTPELLIER",
session.config.name=NA,
session.config.participation_fee=NA,
session.config.real_world_currency_per_point=NA)
MONTPEL <- read_delim("C:/Users/aguido/Dropbox/Werk - Projects/Orange - Nudges/Study proposal/02_Design_proposal/002_Pilot/Data/MONTPEL_2022-09-30.csv", delim = ";") %>% filter(!is.na(participant.label)) %>% mutate(location="MONTPELLIER",
session.config.name=NA,
session.config.participation_fee=NA,
session.config.real_world_currency_per_point=NA)
MONTPEL <- read_delim("C:/Users/aguido/Dropbox/Werk - Projects/Orange - Nudges/Study proposal/02_Design_proposal/002_Pilot/Data/MONTPEL_2022-09-30.csv", delim = ";")
MONTPEL <- read_csv("C:/Users/aguido/Dropbox/Werk - Projects/Orange - Nudges/Study proposal/02_Design_proposal/002_Pilot/Data/MONTPEL_2022-09-30.csv") %>% filter(!is.na(participant.label)) %>% mutate(location="MONTPELLIER",
session.config.name=NA,
session.config.participation_fee=NA,
session.config.real_world_currency_per_point=NA)
MONTPEL <- read_csv("C:/Users/aguido/Dropbox/Werk - Projects/Orange - Nudges/Study proposal/02_Design_proposal/002_Pilot/Data/MONTPEL_2022-09-30.csv")
MONTPEL
MONTPEL <- read_csv("C:/Users/aguido/Dropbox/Werk - Projects/Orange - Nudges/Study proposal/02_Design_proposal/002_Pilot/Data/MONTPEL_2022-09-30.csv") %>% filter(!is.na(participant.label)) %>% mutate(location="MONTPELLIER",
session.config.name=NA,
session.config.participation_fee=NA,
session.config.real_world_currency_per_point=NA)
MONTPEL <- read_csv("C:/Users/aguido/Dropbox/Werk - Projects/Orange - Nudges/Study proposal/02_Design_proposal/002_Pilot/Data/MONTPEL_2022-09-30.csv")
MONTPEL
MONTPEL <- read_csv("C:/Users/aguido/Dropbox/Werk - Projects/Orange - Nudges/Study proposal/02_Design_proposal/002_Pilot/Data/MONTPEL_2022-09-30.csv") %>% filter(!is.na(participant.label))
problems()
MONTPEL <- read_csv("C:/Users/aguido/Dropbox/Werk - Projects/Orange - Nudges/Study proposal/02_Design_proposal/002_Pilot/Data/MONTPEL_2022-09-30.csv") %>% filter(!is.na(participant.label)) %>% mutate(location="MONTPELLIER",
session.config.name=NA,
session.config.participation_fee=NA,
session.config.real_world_currency_per_point=NA)
MONTPEL <- read_csv("C:/Users/aguido/Dropbox/Werk - Projects/Orange - Nudges/Study proposal/02_Design_proposal/002_Pilot/Data/MONTPEL_2022-09-30.csv", quote = "\"") %>% filter(!is.na(participant.label)) %>% mutate(location="MONTPELLIER",
session.config.name=NA,
session.config.participation_fee=NA,
session.config.real_world_currency_per_point=NA)
MONTPEL <- read_csv("C:/Users/aguido/Dropbox/Werk - Projects/Orange - Nudges/Study proposal/02_Design_proposal/002_Pilot/Data/MONTPEL_2022-09-30.csv") %>% filter(!is.na(participant.label)) %>% mutate(location="MONTPELLIER",
session.config.name=NA,
session.config.participation_fee=NA,
session.config.real_world_currency_per_point=NA)
spec()
spec(MONTPEL)
MONTPEL <- read_csv("C:/Users/aguido/Dropbox/Werk - Projects/Orange - Nudges/Study proposal/02_Design_proposal/002_Pilot/Data/MONTPEL_2022-09-30.csv") %>% filter(!is.na(participant.label)) %>% mutate(location="MONTPELLIER",
session.config.name=NA,
session.config.participation_fee=NA,
session.config.real_world_currency_per_point=NA)
problems()
View(problems())
problems()
MONTPEL <- read_csv("C:/Users/aguido/Dropbox/Werk - Projects/Orange - Nudges/Study proposal/02_Design_proposal/002_Pilot/Data/MONTPEL_2022-09-30.csv") %>% filter(!is.na(participant.label)) %>% mutate(location="MONTPELLIER",
session.config.name=NA,
session.config.participation_fee=NA,
session.config.real_world_currency_per_point=NA)
problems()
MONTPEL$pilot_orange.1.player.wifi_consumption
mean(MONTPEL$pilot_orange.1.player.wifi_consumption, na.rm=T)
```{r Import_library, echo=FALSE, message=TRUE, warning=FALSE}
library(reticulate)
library(reticulate)
library(reticulate)
reticulate::repl_python()
x=1
y="BSB"
z=True
# create list
L1 = [x,y,z]
print(L1)
x=2
getwd()
dir()
import numpy as np
np.genfromtxt()
np.genfromtxt(fname="")
np.genfromtxt(fname="prova.csv")
genfromtxt
help(genfromtxt)
help(np.genfromtxt)
np.genfromtxt(fname="prova.csv",delimiter=",")
np.genfromtxt(fname="people.csv",delimiter=",")
quit
setwd("C:/Users/aguido/Downloads")
reticulate::repl_python()
np.genfromtxt(fname="people.csv",delimiter=",")
data = np.genfromtxt(fname="people.csv",delimiter=",")
View(data)
data = np.genfromtxt(fname="baseballdatabank-2022.2/Teams.csv",delimiter=",")
View(data)
data.T
data = np.genfromtxt(fname="baseballdatabank-2022.2/Teams.csv",delimiter=",", skiprows = 1)
data = np.genfromtxt(fname="baseballdatabank-2022.2/Teams.csv",delimiter=",", skipheader = 1)
data = np.genfromtxt(fname="baseballdatabank-2022.2/Teams.csv",delimiter=",", skipheader = True)
data = np.genfromtxt(fname="baseballdatabank-2022.2/Teams.csv",delimiter=",", ski_header = 1)
data = np.genfromtxt(fname="baseballdatabank-2022.2/Teams.csv",delimiter=",", skip_header = 1)
View(data)
data.T
data = np.genfromtxt(fname="baseballdatabank-2022.2/Teams.csv",delimiter=",", skip_header = 1)
View(data)
data.shape
data = np.genfromtxt(fname="baseballdatabank-2022.2/Teams.csv",delimiter=",", skip_header = 1)
data.shape
data = np.genfromtxt(fname="baseballdatabank-2022.2/Teams.csv",delimiter=",", skip_header = 1)
data.shape
data = np.genfromtxt(fname="baseballdatabank-2022.2/Teams.csv",delimiter=";", skip_header = 1)
View(data)
data.shape
data[:,1]
data[:,0]
suca = data[:,0]
suca.type
type(suca)
sum(suca)
data = np.genfromtxt(fname="baseballdatabank-2022.2/Teams.csv",delimiter=",", skip_header = 1)
data.shape
import os
os.getcwd()
os.chdir("C://Users/aguido/Documents/GitHub/datasciencewithpython/")
data = np.genfromtxt(fname="2021_Baseball_Teams.csv",delimiter=";", skip_header = 1)
data.shape
R = data[:,14]
sum(R)
def stats(col):
print('Mean', np.mean(col))
print('Median', np.median(col))
# 2 now include in the function the possibility to select one team by name and provide same statistics
pass
stats(R)
names= data[:,41]
names
names= data[:,40]
names
data[:,40]
R
View(data)
data.T.T.T
names= data[:,15]
names
names= data[:,3]
names
data.dtype
data.shape
names.dtype
np.array2string(names.dtype)
os.chdir("C://Users/aguido/Documents/GitHub/datasciencewithpython/")
data = np.genfromtxt(fname="2021_Baseball_Teams.csv",delimiter=";", skip_header = 1)
data.shape
NY = data[:,1]
NY
BO = data[:,2]
CS = data[:,3]
YR= data[:,0]
def stats(col):
print('Mean', np.mean(col))
print('Median', np.median(col))
pass
# 2 now include in the function the possibility to select one team by name and provide same statistics
stats(NY)
def stats(col):
print('Mean', np.nanmean()(col))
print('Median', np.nanmedian(col))
pass
stats(NY)
def stats(col):
print('Mean', np.nanmean(col))
print('Median', np.nanmedian(col))
pass
stats(BO)
stats(NY)
stats(CS)
np.where(YR)
np.where(YR>2002)
yE = np.where(YR<2012)
yI = np.where(YR>2002)
yI
yI[0]
yI[0,;]
yI[0,:]
yI[0]
yI[0][0]
YR[yI[0][0],yE[0][0]]
YR[yI[0][0]:yE[0][0]]
yI[0][0]
yE[0][0]
yE = np.where(YR<2012)
yE
YR[yI[0][0]:yE[0][len(yE)]]
len(yE)
len(yE[0])
YR[yI[0][0]:yE[0][len(yE[0])]]
YR.shape
yE[0][len(yE[0])]
len(yE[0])
yE[0]
yI = np.where(YR==2002)
yI
yE = np.where(YR==2012)
yE
YR[yI[0][0]:yE[0][0]]
YR[yI[0][0]:yE[0][0]+1]
def stats_year(yearI, yearE, col):
yI = np.where(YR==yearI)
yE = np.where(YR==yearE)
dt=col[yI[0][0]:yE[0][0]+1]
stats(dt)
stats_year(2002,2012, BO)
stats_year(2002,2002, BO)
np.where(YR==2001, BO)
np.where(YR==2001, 'BO')
suca=data[:,0:1]
suca
suca=data[:,0:3]
suca
np.where(YR==2001, 529)
np.where(YR==2001, 529,829)
import numpy as np
x = [12.23, 13.32, 100, 36.32]
x_array = np.array(x)
x_array
x_array.dtype
help(np.array)
np.arange(2,11).reshape(3,3)
x = np.arange(2,11)
x
x[0]
x[8]
x.reshape(3,3)
x = np.zeros(10)
x
x[6]=11
x
x[5]=11
x[5]=11
x=np.arange(1,20)
x
list(reversed(x))
x[::-1]
np.array(list(reversed(x)))
x[::-1]
quit
student_info=(['James','5','48.5'],['Nail','6','52.5'],['Paul','5','42.1'],['Pit','5','40.11'])
student_info_array=np.array(student_info)
print([student_info_array[:, 2].argsort()])
)
reticulate::repl_python()
import numpy as np
student_info=(['James','5','48.5'],['Nail','6','52.5'],['Paul','5','42.1'],['Pit','5','40.11'])
student_info=(['James','5','48.5'],['Nail','6','52.5'],['Paul','5','42.1'],['Pit','5','40.11'])
student_info_array=np.array(student_info)
student_info_array[student_info_array[:, 2].argsort()]
print([student_info_array[:, 2].argsort()])
[student_info_array[:, 2].argsort()]
import pandas
pip install pandas
pip3 install pandas
import pandas as pd
def stats(col):
print('Mean is: ', np.nanmean(col))
print('Median is: ', np.nanmedian(col))
print('Standard dev is: ', np.nanstd(col))
pass
stats(NY)
print('Standard dev is: ', round(np.nanstd(col),1))
def stats(col):
print('Mean is: ', round(np.nanmean(col),1)
print('Median is: ', round(np.nanmedian(col),1)
print('Standard dev is: ', round(np.nanstd(col),1))
pass
stats(NY)
def stats(col):
print('Mean is: ', round(np.nanmean(col),1))
print('Median is: ', round(np.nanmedian(col),1))
print('Standard dev is: ', round(np.nanstd(col),1))
pass
stats(NY)
def stats(col):
print('Mean is: ', round(np.nanmean(col),1))
print('Median is: ', round(np.nanmedian(col),1))
print('Standard dev is: ', round(np.nanstd(col),1))
pass
stats(NY)
def stats(data):
print("Team        NY | BO              CS")
print('Mean       ', round(np.nanmean(data[:1]),1), " | ", round(np.nanmean(data[:2]),1), ," | ",round(np.nanmean(data[:3]),1))
#print('Median is: ', round(np.nanmedian(col),1))
#print('Standard dev is: ', round(np.nanstd(col),1))
pass
def stats(data):
print("Team        NY | BO              CS")
print('Mean       ', round(np.nanmean(data[:1]),1), " | ", round(np.nanmean(data[:2]),1), ," | ",round(np.nanmean(data[:3]),1))
#print('Median is: ', round(np.nanmedian(col),1))
#print('Standard dev is: ', round(np.nanstd(col),1))
pass
def stats(data):
print("Team        NY | BO              CS")
print('Mean       ', round(np.nanmean(data[:1]),1), " | ", round(np.nanmean(data[:2]),1), ," | ",round(np.nanmean(data[:3]),1))
pass
def stats(data):
print("Team        NY | BO              CS")
print('Mean       ', round(np.nanmean(data[:1]),1), " | ", round(np.nanmean(data[:2]),1) ," | ",round(np.nanmean(data[:3]),1))
#print('Median is: ', round(np.nanmedian(col),1))
#print('Standard dev is: ', round(np.nanstd(col),1))
pass
stats(data)
def stats(data):
print("Team        NY |           BO       |       CS")
print('Mean       ', round(np.nanmean(data[:1]),1), " | ", round(np.nanmean(data[:2]),1) ," | ",round(np.nanmean(data[:3]),1))
#print('Median is: ', round(np.nanmedian(col),1))
#print('Standard dev is: ', round(np.nanstd(col),1))
pass
stats(data)
def stats(data):
print("Team        NY      |   BO   |   CS   ")
print('Mean       ', round(np.nanmean(data[:1]),1), " | ", round(np.nanmean(data[:2]),1) ," | ",round(np.nanmean(data[:3]),1))
#print('Median is: ', round(np.nanmedian(col),1))
#print('Standard dev is: ', round(np.nanstd(col),1))
pass
stats(data)
def stats(data):
print("Team        NY      |   BO     |   CS   ")
print('Mean       ', round(np.nanmean(data[:1]),1), " | ", round(np.nanmean(data[:2]),1) ," | ",round(np.nanmean(data[:3]),1))
#print('Median is: ', round(np.nanmedian(col),1))
#print('Standard dev is: ', round(np.nanstd(col),1))
pass
stats(data)
def stats(data):
print("Team        NY      |   BO     |   CS   ")
print('Mean       ', round(np.nanmean(data[:1]),1), " | ", round(np.nanmean(data[:2]),1) ," | ",round(np.nanmean(data[:3]),1))
print('Mean       ', round(np.nanmedian(data[:1]),1), " | ", round(np.nanmedian(data[:2]),1) ," | ",round(np.nanmedian(data[:3]),1))
print('Mean       ', round(np.nanstd(data[:1]),1), " | ", round(np.nanstd(data[:2]),1) ," | ",round(np.nanstd(data[:3]),1))
#print('Median is: ', round(np.nanmedian(col),1))
#print('Standard dev is: ', round(np.nanstd(col),1))
pass
stats(data)
def stats(data):
print("Team        NY      |   BO     |   CS   ")
print('Mean       ', round(np.nanmean(data[:1]),1), " | ", round(np.nanmean(data[:2]),1) ," | ",round(np.nanmean(data[:3]),1))
print('Med.       ', round(np.nanmedian(data[:1]),1), " | ", round(np.nanmedian(data[:2]),1) ," | ",round(np.nanmedian(data[:3]),1))
print('Std.       ', round(np.nanstd(data[:1]),1), " | ", round(np.nanstd(data[:2]),1) ," | ",round(np.nanstd(data[:3]),1))
#print('Median is: ', round(np.nanmedian(col),1))
#print('Standard dev is: ', round(np.nanstd(col),1))
pass
stats(data)
stats(NY)
def stats(dijon):
print('Mean', np.nanmean(dijon))
print('Median', np.nanmedian(dijon))
pass
stats(NY)
stats(BO)
def stats(col):
print('Mean', np.nanmean(col))
print('Median', np.nanmedian(col))
pass
stats(col = NY)
def moving_avg(a,n):
ret = np.cumsum(a, dtype = float, axis = 0)
ret[n:] = ret[n:] - ret[:-n]
return ret[n-1:]/n
pass
moving_avg(NY,2)
moving_avg(BO,2)
np.cumsum(NY, dtype = float, axis = 0)
np.nancumsum(NY, dtype = float, axis = 0)
r=np.nancumsum(NY, dtype = float, axis = 0)
r[n:]
r[3:]
r[0:]
n=3
ret[n:] - ret[:-n]
r[n:] - r[:-n]
r[n:]
r[:-n]
data.shape
def stats(col):
print('Mean is: ', round(np.mean(col),1))
print('Median is: ', round(np.nanmedian(col),1))
print('Standard dev is: ', round(np.nanstd(col),1))
pass
stats(NY)
def stats(col):
print('Mean is: ', round(np.nanmean(col),1))
print('Median is: ', round(np.nanmedian(col),1))
print('Standard dev is: ', round(np.nanstd(col),1))
pass
stats(NY)
np.where(YR==2000)
YR
np.where(YR==2000)
np.where(YR==2000)[0]
x = np.where(YR==2000)
x[0]
x[0][0]
def stats_year(yearI, yearE, col):
yI = np.where(YR==yearI)
yE = np.where(YR==yearE)
dt=col[yI[0][0]:yE[0][0]+1]
stats(dt)
View(stats_year)
stats_year(NY)
stats_year(yearI = 2000, yearE = 2010, col = NY)
stats_year(yearI = 1992, yearE = 2010, col = NY)
stats_year(yearE = 2010, col = NY, yearI =1992)
yearI=2000
yearE=2010
team=NY
yI = np.where(YR==yearI)
yI
yE = np.where(YR==yearE)
yE
team[92:102]
team[yI, yE]
yI
yI[0][0]
stats_year(yearE = 2010, col = NY, yearI =1992)
third = np.intersect1d(yI,yE)
third
yI = np.where(YR>=yearI)
yE = np.where(YR<=yearE)
third = np.intersect1d(yI,yE)
third
def stats_year_david(yearI, yearE, team):
def stats_year_david(yearI, yearE, team):
yI = np.where(YR>=yearI)
yE = np.where(YR<=yearE)
third = np.intersect1d(yI,yE)
#dt=team[yI[0][0]:yE[0][0]+1]
stats(team[third])
def stats_year_david(yearI, yearE, team):
yI = np.where(YR>=yearI)
yE = np.where(YR<=yearE)
third = np.intersect1d(yI,yE)
#dt=team[yI[0][0]:yE[0][0]+1]
stats(team[third])
stats_year_david(2000,2010,NY)
stats_year(2000,2010,NY)
